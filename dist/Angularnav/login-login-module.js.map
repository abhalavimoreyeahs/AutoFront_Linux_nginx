{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/my-dialog/my-dialog.component.css","webpack:///./src/app/my-dialog/my-dialog.component.html","webpack:///./src/app/my-dialog/my-dialog.component.ts","webpack:///./src/app/my-dialog/my-dialog.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","module.exports = \".card-header{\\n background-color: #673ab7;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHlCQUF5QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXJ7XG4gYmFja2dyb3VuZC1jb2xvcjogIzY3M2FiNztcbn0iXX0= */\"","module.exports = \"<!-- <div class=\\\"container\\\" style=\\\"display: flex; align-items: center;justify-content: center;\\\">\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header style=\\\"display: flex; align-items: center;justify-content: center;\\\">\\n          <mat-card-title><h2><b>Login</b></h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content style=\\\"margin-left: 150px;\\\">\\n            <img style=\\\"width:100px;height:100px;margin-top:10%;margin-left:10%\\\" src=\\\"../../assets/user-login-icon.png\\\"/>\\n          <form class=\\\"example-form\\\">\\n            <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field class=\\\"example-full-width\\\" style=\\\"margin-top:15%\\\">\\n                  <input matInput  placeholder=\\\"email\\\" [(ngModel)]=\\\"loginData.email\\\"  name=\\\"email\\\" autocomplete=\\\"off\\\" required>\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n              <tr>\\n              <td><mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput  placeholder=\\\"Password\\\" [(ngModel)]=\\\"loginData.password\\\" type=\\\"password\\\"  name=\\\"password\\\" autocomplete=\\\"off\\\" required>\\n              </mat-form-field></td>\\n            </tr></table>\\n          </form>\\n          <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\" style=\\\"display: none;   width: 10px; height: 100px;\\\"></mat-spinner>\\n          <h5 *ngIf=\\\"loginFalse\\\"> <span style=\\\"color:red\\\">The user name or password is required </span></h5>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\" style=\\\"margin-left: 185px; padding:0% 7%\\\">Login</button>\\n        </mat-card-actions>\\n      </mat-card>\\n\\n</div> -->\\n\\n\\n\\n\\n\\n       <div layout=\\\"row\\\" layout-align=\\\"center center\\\">\\n        <mat-card class=\\\"example-card\\\" style=\\\" max-width: 500px;margin-left: 700px; margin-top: 150px;\\\">\\n            <mat-card-header style=\\\"margin-left: 160px;\\\">\\n              <mat-card-title><h2><b>Login</b></h2></mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content style=\\\"margin-left: 150px;\\\">\\n                <img style=\\\"width:100px;height:100px;margin-top:10%;margin-left:10%\\\" src=\\\"../../assets/user-login-icon.png\\\"/>\\n              <form class=\\\"example-form\\\">\\n                <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"example-full-width\\\" style=\\\"margin-top:15%\\\">\\n                      <input matInput  placeholder=\\\"email\\\" [(ngModel)]=\\\"loginData.email\\\"  name=\\\"email\\\" autocomplete=\\\"off\\\" required>\\n                      </mat-form-field>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                  <td><mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput  placeholder=\\\"Password\\\" [(ngModel)]=\\\"loginData.password\\\" type=\\\"password\\\"  name=\\\"password\\\" autocomplete=\\\"off\\\" required>\\n                  </mat-form-field></td>\\n                </tr></table>\\n              </form>\\n              <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\" style=\\\"display: none;   width: 10px; height: 100px;\\\"></mat-spinner>\\n              <h5 *ngIf=\\\"loginFalse\\\"> <span style=\\\"color:red\\\">The user name or password is required </span></h5>\\n            </mat-card-content>\\n            <mat-card-actions>\\n              <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\" style=\\\"margin-left: 185px; padding:0% 7%\\\">Login</button>\\n            </mat-card-actions>\\n          </mat-card>\\n        </div>\\n\"","import { Component, OnInit , Inject} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AutoDialService } from '../autoDialer.service';\n//import { MyAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { MyDialogComponent } from '../my-dialog/my-dialog.component';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  payload={};\n  animal: string;\n  name: string;\n    loginData = {\n      email: null ,\n      password: null \n    };\n    loginFalse = false;\n    Role ;\n    UserName;\n    constructor(private toastrService: ToastrService, private snackBar: MatSnackBar, public dialog: MatDialog, public router: Router,   private service: AutoDialService) {}\n    \n    ngOnInit() {}\n\n    login() {\n\n      if(this.loginData.email !== null && this.loginData.password!== null && this.loginData.email !== undefined && this.loginData.password!== undefined\n        && this.loginData.email !== '' && this.loginData.password!== ''){\n\n        this.service.login(this.loginData).subscribe((data)=>{\n          console.log(data);\n          if(data.success == true){\n            localStorage.setItem('token', data.apiKey);\n            localStorage.setItem('role', data.user.users.role);\n            localStorage.setItem('username', `${data.user.users.firstName} ${data.user.users.lastName}`);\n            this.Role = data.user.users.role;\n            this.UserName = data.user.users.firstName +' '+data.user.users.lastName;\n            this.service.setUserName(this.UserName); \n            this.showToaster();\n          if(this.Role === 1){\n            \n            this.router.navigate([\"/admin/\"]);\n          }else if( this.Role === 2){\n           \n            this.router.navigate([\"/manager/\"]);\n          }else if(this.Role === 3){\n            if(data['user']['users']){\n              localStorage.setItem('PlivoUserId',data['user']['users']['plivoagentusername']);\n              localStorage.setItem('PlivoPassword',data['user']['users']['plivoagentPassword']);\n            }          \n            this.router.navigate([\"/agent\"]);\n          }\n          }\n          else if(data.success == false){\n          //  alert('sth went wrong');\n          this.payload = {\n            message: 'Login Error',\n            error: data.error.errors[0].message\n          }\n          this.openDialog(this.payload );\n          this.loginData = {\n            email: null ,\n            password: null \n          };\n          }\n         \n      });\n      }\n      else{\n      //  alert('else fill pass or email');\n        this.loginFalse = true;\n      }\n        \n    }\n\n    openDialog(payload): void {\n      console.log(payload);\n      const dialogRef = this.dialog.open(MyDialogComponent, {\n        width: '550px',\n        data: { message: payload.message,error: payload.error },\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        console.log(result);\n      });\n\n    }\n\n\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: ['warning']\n    });\n  }\n\n  //notification\n   showToaster(){\n     this.toastrService.success('Login Successful');\n   }\n   ErrorSuccess(){\n     this.toastrService.error('Login Failed');\n   }\n   infoSuccess(){\n     this.toastrService.info('info msg','Info!');\n   }\n   warningSuccess(){\n     this.toastrService.warning('this is warning');\n   }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { MaterialModule } from '../material/material.module';\n//import { MyAlertDialogModule } from '../alert-dialog/alert-dialog.module'\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport 'hammerjs';\nimport { MyDialogModule } from '../my-dialog/my-dialog.module'\nimport { MyDialogComponent } from '../my-dialog/my-dialog.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MyDialogModule,\n    //    MyAlertDialogModule,\n  //      BrowserAnimationsModule,\n        MaterialModule,\n        LoginRoutingModule],\n        entryComponents:[\n            MyDialogComponent,\n\n        ],\n    declarations: [LoginComponent,] // MyAlertDialogComponent\n})\nexport class LoginModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LWRpYWxvZy9teS1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 matDialogTitle>{{data.message}}</h2>\\n<mat-dialog-content>\\n  <p style=\\\"color:red\\\">{{data.error}}</p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button matDialogClose=\\\"cancel\\\" color=\\\"primary\\\">Cancel</button>\\n  <button mat-button matDialogClose=\\\"confirm\\\" color=\\\"primary\\\" (click)=\\\"ok()\\\">OK</button>\\n</mat-dialog-actions>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-my-dialog',\n  templateUrl: './my-dialog.component.html',\n  styleUrls: ['./my-dialog.component.css']\n})\nexport class MyDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<MyDialogComponent>\n    ,@Inject(MAT_DIALOG_DATA) public data: any) {\n\n     }\n\n  ngOnInit() {\n  }\n  cancel(){\n\n  }\n  ok(){\n    this.dialogRef.close(\"can pass string\");\n    //save the doc\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\n\nimport { MyDialogComponent } from './my-dialog.component';\nimport { MaterialModule } from '../material/material.module';\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport 'hammerjs';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n  //      BrowserAnimationsModule,\n        MaterialModule,\n    ],\n    declarations: [MyDialogComponent]\n})\nexport class MyDialogModule {}"],"sourceRoot":""}